package com.sdq.libs.base.algorithm

/**
 *
 * @PackageName com.sdq.libs.base.algorithm
 * @date 2022/8/29 15:47
 * @author songdongqi
 */
class LinkedAndHash {
    /**
     * 为什么散列表和链表经常一块使用？
     *
     * 散列表这种数据结构虽然支持非常高效的数据插入、删除、查找操作，但是散列表中的数据都是通过散列函数打乱之
     * 后无规律存储的。也就说，它无法支持按照某种顺序快速地遍历数据。
     * 如果希望按照顺序遍历散列表中的数据，那我们需要将散列表中的数据拷贝到数组中，然后排序，再遍历。
     * 因为散列表是动态数据结构，不停地有数据的插入、删除，所以每当我们希望按顺序遍历散列表中的数据的时候，
     * 都需要先排序，那效率势必会很低。
     * 为了解决这个问题，我们将散列表和链表（或者跳表）结合在一起使用。
     */
}